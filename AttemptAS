/*********************************************************************************************************************************
Gradle scripts that syncs successfully and works for everyone else but doesnt allow me to connect to RealtimeDatabase because 
    build.gradle will include these new dependencies:
        compile 'com.google.firebase:firebase-database:16.0.1:15.0.0'
and the database:15.0.0 causes a sync error. So the sync fails to resolve.
*********************************************************************************************************************************/

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.torres.rocket_league_racer"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-database:16.0.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.firebase:firebase-database:16.0.1'
    implementation 'com.google.firebase:firebase-database:16.0.1:15.0.0'
}
apply plugin: 'com.google.gms.google-services'


/*********************************************************************************************************************************
*********************************************************************************************************************************/
buildscript {
    
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.0.1'
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.google.gms:google-services:4.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


/*********************************************************************************************************************************
script to design button and app page for list view
*********************************************************************************************************************************/

<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/mainText"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    tools:layout_editor_absoluteY="81dp">


    <Button
        android:id="@+id/RetrieveList"
        android:layout_width="0dp"
        android:layout_height="53dp"
        android:layout_marginStart="33dp"
        android:layout_marginLeft="33dp"
        android:layout_marginEnd="33dp"
        android:layout_marginRight="33dp"
        android:layout_marginBottom="16dp"
        android:background="@drawable/button_background"
        android:padding="1dp"
        android:text="@string/Retrievelist"
        android:textAllCaps="false"
        android:textColor="@android:color/holo_green_dark"
        android:textColorLink="@color/colorAccent"
        android:textSize="30sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/dataListView" />

    <ListView
        android:id="@+id/dataListView"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="8dp"
        android:layout_marginLeft="8dp"
        android:layout_marginTop="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginRight="8dp"
        android:layout_marginBottom="8dp"
        app:layout_constraintBottom_toTopOf="@+id/RetrieveList"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</android.support.constraint.ConstraintLayout>


/*********************************************************************************************************************************
code for app to complete testsunder MainActivity.java in Android Studio
*********************************************************************************************************************************/



package com.alejandroapp.realtimedblist;

/*********************************************************************************************************************************
Set variables and initialze taks
 *********************************************************************************************************************************/
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class RealtimeDBList extends AppCompatActivity {

    private ListView dataListView;
    private EditText itemText;
    private Button RetrieveList;
    private Boolean searchMode = false;
    private int selectedPosition = 0;

    private FirebaseDatabase database = FirebaseDatabase.getInstance();
    private DatabaseReference dbRef = database.getReference("todo");

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_realtime_dblist);

        dataListView = (ListView) findViewById(R.id.dataListView);
        itemText = (EditText) findViewById(R.id.itemText);
        RetrieveList = (Button) findViewById(R.id.RetrieveList);


    }
}

/*********************************************************************************************************************************
List View
 *********************************************************************************************************************************/
package com.ebookfrenzy.firebaselist;

        import android.widget.ArrayAdapter;
        import android.widget.AdapterView;
        import android.view.View;
        import java.util.ArrayList;
        import java.util.Iterator;

public class MainActivity extends AppCompatActivity {

    ArrayList<String> listItems = new ArrayList<String>();
    ArrayList<String> listKeys = new ArrayList<String>();
    ArrayAdapter<String> adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_realtime_dblist);

        dataListView = (ListView) findViewById(R.id.dataListView);
        RetireveItem = (Button) findViewById(R.id.RetrieveItem);

        adapter = new ArrayAdapter<String>(this,
                android.R.layout.simple_list_item_single_choice,
                listItems);
        dataListView.setAdapter(adapter);
        dataListView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);

        dataListView.setOnItemClickListener(
                new AdapterView.OnItemClickListener() {
                    public void onItemClick(AdapterView<?> parent,
                                            View view, int position, long id) {
                        selectedPosition = position;
                        itemSelected = true;
                    }
                });

        addChildEventListener();
    }
}

/*********************************************************************************************************************************
If my gralde could allow my app to connect to firebase realtime database, I could test the scripts on the app. But this is as far 
as I got. I would have added code after list view to only display private users on the list when the button is pressed. 
All the users were inputted into Firebase Database under Users with Field and private (true or false)
*********************************************************************************************************************************/



